# Generated by Django 2.1.7 on 2019-05-21 06:23

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CfgLookup',
            fields=[
                ('choice', models.CharField(blank=True, db_column='Choice', max_length=25, null=True)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=50, null=True)),
                ('typeid', models.IntegerField(blank=True, db_column='TypeId', null=True)),
                ('uniquekey', models.CharField(db_column='UniqueKey', max_length=22, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'Cfg_Lookup',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CfgType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'Cfg_Type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('date_created', models.DateTimeField(auto_now_add=True, db_column='Date Created', null=True)),
                ('date_modified', models.DateTimeField(auto_now=True, db_column='Date Modified', null=True)),
                ('first_name', models.CharField(blank=True, db_column='First Name', max_length=20, null=True)),
                ('middle_name', models.CharField(blank=True, db_column='Middle Name', max_length=20, null=True)),
                ('last_name', models.CharField(blank=True, db_column='Last Name', max_length=20, null=True)),
                ('name_to_call_me', models.CharField(blank=True, db_column='Name to Call Me', max_length=20, null=True)),
                ('comments', models.TextField(blank=True, db_column='Comments', null=True)),
                ('home_address', models.CharField(blank=True, db_column='Home Address', max_length=40, null=True)),
                ('home_city', models.CharField(blank=True, db_column='Home City', default='PENSACOLA', max_length=25, null=True)),
                ('home_state', models.CharField(blank=True, choices=[('AK', 'ALASKA'), ('AL', 'ALABAMA'), ('AR', 'ARKANSAS'), ('AZ', 'ARIZONA'), ('CA', 'CALIFORNIA'), ('CO', 'COLORADO'), ('CT', 'CONNECTICUT'), ('DC', 'DISTRICT OF COLUMBIA'), ('DE', 'DELAWARE'), ('FL', 'FLORIDA'), ('FR', 'FOREIGN'), ('GA', 'GEORGIA'), ('HI', 'HAWAII'), ('IA', 'IOWA'), ('ID', 'IDAHO'), ('IL', 'ILLINOIS'), ('IN', 'INDIANA'), ('KS', 'KANSAS'), ('KY', 'KENTUCKY'), ('LA', 'LOUISIANA'), ('MA', 'MASSACHUSETTS'), ('MD', 'MARYLAND'), ('ME', 'MAINE'), ('MI', 'MICHIGAN'), ('MN', 'MINNESOTA'), ('MO', 'MISSOURI'), ('MS', 'MISSISSIPPI'), ('MT', 'MONTANA'), ('NB', 'NEBRASKA'), ('NC', 'NORTH CAROLINA'), ('ND', 'NORTH DAKOTA'), ('NH', 'NEW HAMPSHIRE'), ('NJ', 'NEW JERSEY'), ('NM', 'NEW MEXICO'), ('NV', 'NEVADA'), ('NY', 'NEW YORK'), ('OH', 'OHIO'), ('OK', 'OKLAHOMA'), ('OR', 'OREGON'), ('PA', 'PENNSYLVANIA'), ('RI', 'RHODE ISLAND'), ('SC', 'SOUTH CAROLINA'), ('SD', 'SOUTH DAKOTA'), ('TN', 'TENNESSEE'), ('TX', 'TEXAS'), ('UT', 'UTAH'), ('VA', 'VIRGINIA'), ('VT', 'VERMONT'), ('WA', 'WASHINGTON'), ('WI', 'WISCONSIN'), ('WV', 'WEST VIRGINIA'), ('WY', 'WYOMING')], db_column='Home State', default='FL', max_length=2, null=True)),
                ('home_zip', models.CharField(blank=True, db_column='Home Zip', default='325', max_length=10, null=True)),
                ('home_phone', models.CharField(blank=True, db_column='Home Phone', max_length=13, null=True)),
                ('dob', models.DateTimeField(blank=True, db_column='DOB', null=True)),
                ('dob_year', models.IntegerField(blank=True, db_column='DOB_YEAR', null=True)),
                ('hair', models.CharField(blank=True, choices=[('BALD', 'BALD'), ('BLACK', 'BLACK'), ('BLONDE', 'BLONDE'), ('BLONDISH', 'BLONDISH'), ('BLUE', 'BLUE'), ('BROWN', 'BROWN'), ('BROWN RED', 'BROWN RED'), ('GRAY', 'GRAY'), ('GREEN', 'GREEN'), ('OTHER', 'OTHER'), ('PURPLE', 'PURPLE'), ('RED', 'RED'), ('SALT & PEP', 'SALT & PEP'), ('STRBRY BLD', 'STRBRY BLD')], db_column='Hair', max_length=10, null=True)),
                ('eyes', models.CharField(blank=True, choices=[('BLACK', 'BLACK'), ('BLUE', 'BLUE'), ('BROWN', 'BROWN'), ('GREEN', 'GREEN'), ('HAZEL', 'HAZEL'), ('OTHER', 'OTHER')], db_column='Eyes', max_length=10, null=True)),
                ('race', models.CharField(blank=True, choices=[('A', 'ASIAN'), ('B', 'AFRICAN AMERICAN'), ('BR', 'BI-RACIAL'), ('H', 'HISPANIC'), ('O', 'OTHER'), ('P', 'PACIFIC ISLANDER'), ('W', 'WHITE NON-HISPANIC')], db_column='Race', max_length=1, null=True)),
                ('sex', models.CharField(blank=True, choices=[('F', 'FEMALE'), ('M', 'MALE')], db_column='Sex', max_length=1, null=True)),
                ('height', models.IntegerField(blank=True, db_column='Height', null=True)),
                ('weight', models.IntegerField(blank=True, db_column='Weight', null=True)),
                ('picture', models.BinaryField(blank=True, db_column='Picture', null=True)),
                ('picture_date', models.DateTimeField(blank=True, db_column='Picture Date', null=True)),
                ('emergency_contact_1_name', models.CharField(blank=True, db_column='Emergency Contact 1 Name', max_length=30, null=True)),
                ('emergency_contact_1_phone', models.CharField(blank=True, db_column='Emergency Contact 1 Phone', max_length=20, null=True)),
                ('emergency_contact_1_relationship', models.CharField(blank=True, choices=[('AUNT', 'AUNT'), ('AUNT & UNCLE', 'AUNT & UNCLE'), ('BABY SITTER', 'BABY SITTER'), ('BROTHER', 'BROTHER'), ('CAREGIVER', 'CAREGIVER'), ('COUSIN', 'COUSIN'), ('DAUGHTER', 'DAUGHTER'), ('DAY CARE PROVIDER', 'DAY CARE PROVIDER'), ('FATHER', 'FATHER'), ('FOSTER PARENT(S)', 'FOSTER PARENT(S)'), ('FRIEND', 'FRIEND'), ('GOD PARENTS', 'GOD PARENTS'), ('GRANDFATHER', 'GRANDFATHER'), ('GRANDMOTHER', 'GRANDMOTHER'), ('GRANDPARENTS', 'GRANDPARENTS'), ('GREAT AUNT', 'GREAT AUNT'), ('GREAT GRANDPARENT', 'GREAT GRANDPARENT'), ('GROUP HOME MANAGER', 'GROUP HOME MANAGER'), ('HUSBAND', 'HUSBAND'), ('IN-LAW', 'IN-LAW'), ('LEGAL GUARDIAN', 'LEGAL GUARDIAN'), ('MOTHER', 'MOTHER'), ('NEIGHBOR', 'NEIGHBOR'), ('NEPHEW', 'NEPHEW'), ('NIECE', 'NIECE'), ('OTHER', 'OTHER'), ('PARENTS', 'PARENTS'), ('SISTER', 'SISTER'), ('SON', 'SON'), ('STEP-FATHER', 'STEP-FATHER'), ('STEP-MOTHER', 'STEP-MOTHER'), ('SUPERVISOR', 'SUPERVISOR'), ('THERAPIST', 'THERAPIST'), ('UNCLE', 'UNCLE'), ('WIFE', 'WIFE')], db_column='Emergency Contact 1 Relationship', max_length=20, null=True)),
                ('emergency_contact_1_address', models.CharField(blank=True, db_column='Emergency Contact 1 Address', max_length=50, null=True)),
                ('emergency_contact_1_comments', models.TextField(blank=True, db_column='Emergency Contact 1 Comments', null=True)),
                ('emergency_contact_2_name', models.CharField(blank=True, db_column='Emergency Contact 2 Name', max_length=30, null=True)),
                ('emergency_contact_2_phone', models.CharField(blank=True, db_column='Emergency Contact 2 Phone', max_length=20, null=True)),
                ('emergency_contact_2_relationship', models.CharField(blank=True, choices=[('AUNT', 'AUNT'), ('AUNT & UNCLE', 'AUNT & UNCLE'), ('BABY SITTER', 'BABY SITTER'), ('BROTHER', 'BROTHER'), ('CAREGIVER', 'CAREGIVER'), ('COUSIN', 'COUSIN'), ('DAUGHTER', 'DAUGHTER'), ('DAY CARE PROVIDER', 'DAY CARE PROVIDER'), ('FATHER', 'FATHER'), ('FOSTER PARENT(S)', 'FOSTER PARENT(S)'), ('FRIEND', 'FRIEND'), ('GOD PARENTS', 'GOD PARENTS'), ('GRANDFATHER', 'GRANDFATHER'), ('GRANDMOTHER', 'GRANDMOTHER'), ('GRANDPARENTS', 'GRANDPARENTS'), ('GREAT AUNT', 'GREAT AUNT'), ('GREAT GRANDPARENT', 'GREAT GRANDPARENT'), ('GROUP HOME MANAGER', 'GROUP HOME MANAGER'), ('HUSBAND', 'HUSBAND'), ('IN-LAW', 'IN-LAW'), ('LEGAL GUARDIAN', 'LEGAL GUARDIAN'), ('MOTHER', 'MOTHER'), ('NEIGHBOR', 'NEIGHBOR'), ('NEPHEW', 'NEPHEW'), ('NIECE', 'NIECE'), ('OTHER', 'OTHER'), ('PARENTS', 'PARENTS'), ('SISTER', 'SISTER'), ('SON', 'SON'), ('STEP-FATHER', 'STEP-FATHER'), ('STEP-MOTHER', 'STEP-MOTHER'), ('SUPERVISOR', 'SUPERVISOR'), ('THERAPIST', 'THERAPIST'), ('UNCLE', 'UNCLE'), ('WIFE', 'WIFE')], db_column='Emergency Contact 2 Relationship', max_length=20, null=True)),
                ('emergency_contact_2_address', models.CharField(blank=True, db_column='Emergency Contact 2 Address', max_length=50, null=True)),
                ('emergency_contact_2_comments', models.TextField(blank=True, db_column='Emergency Contact 2 Comments', null=True)),
                ('emergency_contact_3_name', models.CharField(blank=True, db_column='Emergency Contact 3 Name', max_length=30, null=True)),
                ('emergency_contact_3_phone', models.CharField(blank=True, db_column='Emergency Contact 3 Phone', max_length=20, null=True)),
                ('emergency_contact_3_relationship', models.CharField(blank=True, choices=[('AUNT', 'AUNT'), ('AUNT & UNCLE', 'AUNT & UNCLE'), ('BABY SITTER', 'BABY SITTER'), ('BROTHER', 'BROTHER'), ('CAREGIVER', 'CAREGIVER'), ('COUSIN', 'COUSIN'), ('DAUGHTER', 'DAUGHTER'), ('DAY CARE PROVIDER', 'DAY CARE PROVIDER'), ('FATHER', 'FATHER'), ('FOSTER PARENT(S)', 'FOSTER PARENT(S)'), ('FRIEND', 'FRIEND'), ('GOD PARENTS', 'GOD PARENTS'), ('GRANDFATHER', 'GRANDFATHER'), ('GRANDMOTHER', 'GRANDMOTHER'), ('GRANDPARENTS', 'GRANDPARENTS'), ('GREAT AUNT', 'GREAT AUNT'), ('GREAT GRANDPARENT', 'GREAT GRANDPARENT'), ('GROUP HOME MANAGER', 'GROUP HOME MANAGER'), ('HUSBAND', 'HUSBAND'), ('IN-LAW', 'IN-LAW'), ('LEGAL GUARDIAN', 'LEGAL GUARDIAN'), ('MOTHER', 'MOTHER'), ('NEIGHBOR', 'NEIGHBOR'), ('NEPHEW', 'NEPHEW'), ('NIECE', 'NIECE'), ('OTHER', 'OTHER'), ('PARENTS', 'PARENTS'), ('SISTER', 'SISTER'), ('SON', 'SON'), ('STEP-FATHER', 'STEP-FATHER'), ('STEP-MOTHER', 'STEP-MOTHER'), ('SUPERVISOR', 'SUPERVISOR'), ('THERAPIST', 'THERAPIST'), ('UNCLE', 'UNCLE'), ('WIFE', 'WIFE')], db_column='Emergency Contact 3 Relationship', max_length=20, null=True)),
                ('emergency_contact_3_address', models.CharField(blank=True, db_column='Emergency Contact 3 Address', max_length=50, null=True)),
                ('emergency_contact_3_comments', models.TextField(blank=True, db_column='Emergency Contact 3 Comments', null=True)),
                ('emergency_contact_4_name', models.CharField(blank=True, db_column='Emergency Contact 4 Name', max_length=30, null=True)),
                ('emergency_contact_4_phone', models.CharField(blank=True, db_column='Emergency Contact 4 Phone', max_length=20, null=True)),
                ('emergency_contact_4_relationship', models.CharField(blank=True, choices=[('AUNT', 'AUNT'), ('AUNT & UNCLE', 'AUNT & UNCLE'), ('BABY SITTER', 'BABY SITTER'), ('BROTHER', 'BROTHER'), ('CAREGIVER', 'CAREGIVER'), ('COUSIN', 'COUSIN'), ('DAUGHTER', 'DAUGHTER'), ('DAY CARE PROVIDER', 'DAY CARE PROVIDER'), ('FATHER', 'FATHER'), ('FOSTER PARENT(S)', 'FOSTER PARENT(S)'), ('FRIEND', 'FRIEND'), ('GOD PARENTS', 'GOD PARENTS'), ('GRANDFATHER', 'GRANDFATHER'), ('GRANDMOTHER', 'GRANDMOTHER'), ('GRANDPARENTS', 'GRANDPARENTS'), ('GREAT AUNT', 'GREAT AUNT'), ('GREAT GRANDPARENT', 'GREAT GRANDPARENT'), ('GROUP HOME MANAGER', 'GROUP HOME MANAGER'), ('HUSBAND', 'HUSBAND'), ('IN-LAW', 'IN-LAW'), ('LEGAL GUARDIAN', 'LEGAL GUARDIAN'), ('MOTHER', 'MOTHER'), ('NEIGHBOR', 'NEIGHBOR'), ('NEPHEW', 'NEPHEW'), ('NIECE', 'NIECE'), ('OTHER', 'OTHER'), ('PARENTS', 'PARENTS'), ('SISTER', 'SISTER'), ('SON', 'SON'), ('STEP-FATHER', 'STEP-FATHER'), ('STEP-MOTHER', 'STEP-MOTHER'), ('SUPERVISOR', 'SUPERVISOR'), ('THERAPIST', 'THERAPIST'), ('UNCLE', 'UNCLE'), ('WIFE', 'WIFE')], db_column='Emergency Contact 4 Relationship', max_length=20, null=True)),
                ('emergency_contact_4_address', models.CharField(blank=True, db_column='Emergency Contact 4 Address', max_length=50, null=True)),
                ('emergency_contact_4_comments', models.TextField(blank=True, db_column='Emergency Contact 4 Comments', null=True)),
                ('emergency_contact_5_name', models.CharField(blank=True, db_column='Emergency Contact 5 Name', max_length=30, null=True)),
                ('emergency_contact_5_phone', models.CharField(blank=True, db_column='Emergency Contact 5 Phone', max_length=20, null=True)),
                ('emergency_contact_5_relationship', models.CharField(blank=True, choices=[('AUNT', 'AUNT'), ('AUNT & UNCLE', 'AUNT & UNCLE'), ('BABY SITTER', 'BABY SITTER'), ('BROTHER', 'BROTHER'), ('CAREGIVER', 'CAREGIVER'), ('COUSIN', 'COUSIN'), ('DAUGHTER', 'DAUGHTER'), ('DAY CARE PROVIDER', 'DAY CARE PROVIDER'), ('FATHER', 'FATHER'), ('FOSTER PARENT(S)', 'FOSTER PARENT(S)'), ('FRIEND', 'FRIEND'), ('GOD PARENTS', 'GOD PARENTS'), ('GRANDFATHER', 'GRANDFATHER'), ('GRANDMOTHER', 'GRANDMOTHER'), ('GRANDPARENTS', 'GRANDPARENTS'), ('GREAT AUNT', 'GREAT AUNT'), ('GREAT GRANDPARENT', 'GREAT GRANDPARENT'), ('GROUP HOME MANAGER', 'GROUP HOME MANAGER'), ('HUSBAND', 'HUSBAND'), ('IN-LAW', 'IN-LAW'), ('LEGAL GUARDIAN', 'LEGAL GUARDIAN'), ('MOTHER', 'MOTHER'), ('NEIGHBOR', 'NEIGHBOR'), ('NEPHEW', 'NEPHEW'), ('NIECE', 'NIECE'), ('OTHER', 'OTHER'), ('PARENTS', 'PARENTS'), ('SISTER', 'SISTER'), ('SON', 'SON'), ('STEP-FATHER', 'STEP-FATHER'), ('STEP-MOTHER', 'STEP-MOTHER'), ('SUPERVISOR', 'SUPERVISOR'), ('THERAPIST', 'THERAPIST'), ('UNCLE', 'UNCLE'), ('WIFE', 'WIFE')], db_column='Emergency Contact 5 Relationship', max_length=20, null=True)),
                ('emergency_contact_5_address', models.CharField(blank=True, db_column='Emergency Contact 5 Address', max_length=50, null=True)),
                ('emergency_contact_5_comments', models.TextField(blank=True, db_column='Emergency Contact 5 Comments', null=True)),
                ('organization', models.CharField(blank=True, choices=[('ALZHEIMERS', 'ALZHEIMERS'), ('ARC', 'ARC'), ('AUTISTIC FOUNDATION', 'AUTISTIC FOUNDATION'), ('BLIND', 'BLIND'), ('CARD', 'CARD'), ('COMMUNITY EXPERIENCES', 'COMMUNITY EXPERIENCES'), ('COUNCIL ON AGING', 'COUNCIL ON AGING'), ('D.D.', 'D.D.'), ('DEAF & HARD OF HEARING', 'DEAF & HARD OF HEARING'), ('DEVELOPMENTAL SERVICES', 'DEVELOPMENTAL SERVICES'), ('MENTALLY DISABLED', 'MENTALLY DISABLED'), ('OTHER', 'OTHER'), ('UNITED CEREBRAL PALSY', 'UNITED CEREBRAL PALSY'), ('WEST GATE SCHOOL', 'WEST GATE SCHOOL')], db_column='Organization', max_length=30, null=True)),
                ('record_type', models.CharField(blank=True, choices=[('ADHD & MENTALLY DISABLED', 'ADHD & MENTALLY DISABLED'), ('ALZHEIMER PATIENT', 'ALZHEIMER PATIENT'), ('AUTISTIC', 'AUTISTIC'), ('AUTISTIC & CEREBRAL PALSY', 'AUTISTIC & CEREBRAL PALSY'), ('AUTISTIC & DOWN SYNDROME', 'AUTISTIC & DOWN SYNDROME'), ('AUTISTIC & MENTALLY DISAB', 'AUTISTIC & MENTALLY DISABLED'), ('BLIND', 'BLIND'), ('BRAIN TUMOR', 'BRAIN TUMOR'), ('CEREBRAL PALSY', 'CEREBRAL PALSY'), ('DOWN SYNDROME', 'DOWN SYNDROME'), ('EPILEPSY & MENTALLY DISAB', 'EPILEPSY & MENTALLY DISABLED'), ('HYPOTONIC CEREBRAL PALSY', 'HYPOTONIC CEREBRAL PALSY'), ('MENTALLY HANDICAPPED', 'MENTALLY HANDICAPPED'), ('OTHER', 'OTHER'), ('PLASTIC STOMACH', 'PLASTIC STOMACH'), ('SPECIAL NEEDS', 'SPECIAL NEEDS'), ('TAY-SACHS DIS/NON-VBL,AMB', 'TAY-SACHS DIS/NON-VBL,AMBLITOR')], db_column='Record Type', max_length=30, null=True)),
                ('braclet_id', models.CharField(blank=True, db_column='Braclet ID', max_length=20, null=True)),
                ('emergency_contact_1_cphone', models.CharField(blank=True, db_column='Emergency Contact 1 CPhone', max_length=20, null=True)),
                ('emergency_contact_2_cphone', models.CharField(blank=True, db_column='Emergency Contact 2 CPhone', max_length=20, null=True)),
                ('emergency_contact_3_cphone', models.CharField(blank=True, db_column='Emergency Contact 3 CPhone', max_length=20, null=True)),
                ('emergency_contact_4_cphone', models.CharField(blank=True, db_column='Emergency Contact 4 CPhone', max_length=20, null=True)),
                ('emergency_contact_5_cphone', models.CharField(blank=True, db_column='Emergency Contact 5 CPhone', max_length=20, null=True)),
                ('primarykey', models.CharField(db_column='PrimaryKey', max_length=22, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'TAKEMEHOME',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InferenceTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[('LOCATING_FACE', 'Locating face...'), ('ANALYZING_FACE', 'Analyzing face...'), ('SUCCESS', 'Success!'), ('ERROR', 'Something went wrong.')], default='LOCATING_FACE', max_length=22)),
                ('primarykey', models.CharField(blank=True, db_column='PrimaryKey', max_length=22, null=True)),
                ('embedding', models.TextField(blank=True, db_column='Embedding', null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, db_column='Date Created', null=True)),
            ],
            options={
                'db_table': 'Inference_Task',
            },
        ),
        migrations.CreateModel(
            name='ImageData',
            fields=[
                ('person', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='tmh.Person')),
                ('picture', models.ImageField(db_column='PictureURL', upload_to='tmh/static/images')),
                ('embedding', models.TextField(blank=True, db_column='Embedding', null=True)),
            ],
            options={
                'db_table': 'Image_Data',
            },
        ),
    ]
